{"version":3,"sources":["TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrElem","index","type","name","value","placeholder","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAaeA,EAXA,SAACC,GACd,OACI,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAcC,cAAY,OAAOC,QAAS,WACnDH,EAAMI,SAASJ,EAAMK,OAEzB,6BAAKL,EAAMM,WCiDNC,EAtDL,WACR,MAA+BC,mBAAS,WAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACF,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAcQC,EAAY,SAACR,GACjBS,QAAQC,IAAI,SAEZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUd,SAIvB,OACF,mCACA,qBAAKJ,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAOmB,KAAK,OAAOC,KAAK,OAAOC,MAAOb,EAAYc,YAAY,mBAAmBC,SA5BnE,SAACC,GACdf,EAAae,EAAMC,OAAOJ,UA4B3B,wBAAQnB,QAvBQ,WAChBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAoBP,OAEtBC,EAAa,KAmBb,iBACA,6BAECC,EAAMgB,KAAI,SAACC,EAAQT,GAChB,OAAQ,cAAC,EAAD,CAENd,GAAIc,EACJb,KAAMsB,EACNxB,SAAUS,GAHLM,gBC7BAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ae6aa29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoList=(props)=>{\r\n  return (\r\n      <div className=\"todo_style\">\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>{\r\n              props.onSelect(props.id);\r\n          }} />\r\n          <li>{props.text}</li>\r\n          </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\nimport TodoList from './TodoList';\n\nconst App=()=>{\n  const [inputList,setInputList]=useState(\"this is\");\nconst [Items,setItems]= useState([]);\n\n  const itemEvent=(event)=>{\n     setInputList(event.target.value);\n  };\n//hooks in rect\n//creating hook\n\n  const listOfItems=()=>{\n    setItems((oldItems)=>{\n      return [...oldItems,inputList]\n    });\n    setInputList(\"\");\n  };\n  const deleteItems=(id)=>{\n    console.log(\"hello\");\n\n    setItems((oldItems)=>{\n      return oldItems.filter((arrElem, index)=>{\n        return index !== id;\n      })\n    });\n}\n  return(\n<>\n<div className=\"main_div\">\n  <div className=\"center_div\">\n    <br />\n    <h1>ToDo List</h1>\n    <br />\n    <input type=\"text\" name=\"text\" value={inputList } placeholder=\"add an item here\" onChange={itemEvent} />\n    <button onClick={listOfItems}> + </button>\n    <ul>\n      {\n     Items.map((itemval,index) => {\n        return (<TodoList\n          key={index}\n          id={index}\n          text={itemval}\n          onSelect={deleteItems}\n          />)\n     })}\n    </ul>\n\n  </div>\n\n</div>\n</>\n  )\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//this is working as main function\n//index.js is working as main function\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}